
import transport.*;

import java.util.Arrays;

/*
Задание 1
Создайте основу приложения для автогонок.

В качестве фундамента структуры классов и данных возьмите реализацию из прошлого урока с классом
Transport
 и его наследниками.

Сделайте класс
Transport
 абстрактным. Дополните реализацию новыми вводными. Все параметры и методы, которые не прописаны в текущем задании, закомментируйте или удалите.

В автогонках могут участвовать несколько видов авто. Для каждого из них нужно создать отдельный класс:

«Легковые автомобили»,
«Грузовые автомобили»,
«Автобусы».
Авто всех трех групп имеют параметры:

«Марка»,
«Модель»,
«Объем двигателя».
Также все авто имеют:

метод «начать движение»,
метод «закончить движение».
Подсказка
Так как остальные параметры и методы нам не важны, их можно удалить или закомментировать.


Для каждого вида авто (легковые, грузовые и автобусы) создайте по 4 объекта с произвольными параметрами.


Подсказка
Не забудьте настроить модификаторы доступа, добавить геттеры и сеттеры, а также проверку данных. Не забудьте переопределять методы.

Критерии проверки
Класс
Transport
 — абстрактный.
Создан класс «Легковые автомобили».
Создан класс «Грузовые автомобили».
Создан класс «Автобусы».
Создано по 4 объекта с произвольными параметрами для каждого класса.
Все лишние параметры и методы, которые не указаны в данном задании, закомментированы.
----------------------------------------------------------------
Задание 2
Создайте для приложения интерфейс «Соревнующийся». В нем создайте методы с типом возвращаемого значения
void
:

«Пит-стоп»,
«Лучшее время круга» (для каждого участника гонок),
«Максимальная скорость» (для каждого участника гонок).
Критерии проверки
Создан интерфейс «Соревнующийся».
Интерфейс «Соревнующийся» имеет метод «Пит-стоп».
Интерфейс «Соревнующийся» имеет метод «Лучшее время круга».
Интерфейс «Соревнующийся» имеет метод «Максимальная скорость».
Методы имеют тип возвращаемого значения
void
------------------------------------------------------------------

Задание 3
Реализуйте интерфейс «Соревнующийся» для классов «Легковые автомобили», «Грузовые автомобили» и «Автобусы». Все методы интерфейса должны быть переопределены.

Укажите реализацию каждого метода в виде вывода информационных сообщений в консоль.


Критерии проверки
Интерфейс «Соревнующийся» реализован для класса «Легковые автомобили».
Все методы интерфейса переопределены для класса «Легковые автомобили».
Информация по каждому объекту класса выводится в консоль.
Интерфейс «Соревнующийся» реализован для класса «Грузовые автомобили».
Все методы интерфейса переопределены для класса «Грузовые автомобили».
Информация по каждому объекту класса выводится в консоль.
Интерфейс «Соревнующийся» реализован для класса «Автобусы».
Все методы интерфейса переопределены для класса «Автобусы».
Информация по каждому объекту класса выводится в консоль.

 -------------------------------------------------------------------

 Задание 4
Создайте общий класс «Водитель», который будет иметь следующие параметры:

«ФИО» водителя,
«Наличие водительских прав»,
«Стаж».
Создайте еще три класса для водителей с разными типами водительских правам:

для легковых авто нужна категория В;
для грузовых нужна категория С;
для автобусов — D.
Все водители должны иметь:

метод «начать движение»,
метод «остановиться»,
метод «заправить авто».
Также должны быть соблюдены следующие условия:

Водитель с определенным типом водительских прав может управлять только авто из своей категории.
Управлять авто других категорий в наших соревнованиях он не может.
В классах авто в качестве дженериков нужно указать класс водителя с определенной водительской категорией.
Теперь напишите приложение, которое выводит в консоль информацию в формате:

“водитель А управляет автомобилем Б и будет участвовать в заезде”
В качестве выполненного задания прикрепите на платформе ссылку на pull-request вашего проекта в GitHub.


Критерии проверки
Реализован класс «Водитель» с набором параметров и методов.
Реализован класс «Водитель категории B».
Реализован класс «Водитель категории C».
Реализован класс «Водитель категории D».
Приложение выводит в консоль сообщение: “водитель X управляет автомобилем Y и будет участвовать в заезде”.

* * */

public class Main {
    public static void main(String[] args) {
    }
}